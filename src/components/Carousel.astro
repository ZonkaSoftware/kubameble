---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
const allImages = await getCollection("banners");
---

<header class=" container object-contain md:h-[65vh] py-10 ">
  <div class=" w-full  h-full relative "> <!-- Added 'relative' class to carousel -->
    <div class="carousel w-full overflow-hidden rounded-lg  h-full  ">
      <div class="carousel-content flex transition-transform duration-500 h-full ">
        {allImages.map((img, index) => (
          <div key={index} class="slide  min-w-full h-full flex items-center justify-center relative"> <!-- Added 'relative' class to slide -->
            <Image class="h-auto w-full object-cover" height="500" width="1000" src={img.data.bannerImage} alt={img.data.title} />
          </div>
        ))}
      </div>
    </div>
    <div class="indicators absolute -bottom-7 right-0 flex justify-center space-x-4"></div> <!-- Adjusted position to always be below images -->
  </div>
</header>

<script type="module">
  const carouselContent = document.querySelector(".carousel-content");
  const indicatorsContainer = document.querySelector(".indicators");
  let currentIndex = 0;
  let timer;

  const slides = Array.from(carouselContent.children);

  function createIndicators() {
    slides.forEach((_, index) => {
      const indicator = document.createElement("span");
      indicator.classList.add(
        "indicator",
        "w-3",
        "h-3",
        "bg-second",
        "rounded-full",
        "cursor-pointer",
        "transition-all",
        "duration-300"
      );
      if (index === 0) indicator.classList.add("bg-main");
      indicator.dataset.slide = index;
      indicator.addEventListener("click", () => goToSlide(index));
      indicatorsContainer.appendChild(indicator);
    });
  }

  function updateCarousel() {
    const offset = -currentIndex * 100;
    carouselContent.style.transform = `translateX(${offset}%)`;

    const indicators = document.querySelectorAll(".indicator");
    indicators.forEach((indicator, index) => {
      indicator.classList.toggle("bg-main", index === currentIndex);
      indicator.classList.toggle("bg-second", index !== currentIndex);
    });
  }

  function nextSlide() {
    currentIndex = (currentIndex + 1) % slides.length;
    updateCarousel();
  }

  function goToSlide(index) {
    currentIndex = index;
    updateCarousel();
    resetTimer();
  }

  function resetTimer() {
    clearInterval(timer);
    timer = setInterval(nextSlide, 4000);
  }

  createIndicators();
  timer = setInterval(nextSlide, 4000);

  updateCarousel();
</script>
